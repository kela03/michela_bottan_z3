from z3 import *
import subprocess

if __name__ == "__main__":
    #otteniamo i numeri pseudo-randomici generati dal seed, che deve essere 17
    #andando ad analizzare il codice decompilato
    result = subprocess.run(
                ["./random_num_generator"],
                stdout = subprocess.PIPE,
                stderr = subprocess.PIPE,
                text = True
            )

    output = result.stdout

    random = [ int(num) for num in output.split()]

    seed = 17
    s = Solver()

    flag = [BitVec(f"flag_{i}", 8) for i in range(seed)]
    ptr = [BitVec(f"ptr_{i}",32) for i in range(seed)]

    s.add(ptr[0] == 2*seed + random[0]%(5*seed))

    for i in range(1,seed):
        v5 = ptr[i-1]
        s.add(ptr[i] == v5 + random[i] % 94 +33)

    
    for j in range(seed):
        v9 = BitVecVal(0,32)
        for k in range(j+1):
            v9 += ZeroExt(24, flag[k])
        
        s.add(ptr[j] == v9)

    print(s.check())
    m = s.model()
    print(m)
    flag_vals = []

    for i in range(len(flag)):
        flag_vals.append(m[flag[i]].as_long())

    flag_cr = ""

    for i in range(len(flag_vals)):
        flag_cr += chr(flag_vals[i])
    print(flag_cr)

    f = [89,117,123,69,74,36,92,102,62,54,34,86,48,76,124,110,54]
    f = f[::-1]

    for ch in f:
        print(chr(ch), end='')
    print()
